
//q1
//Problem:try hashmap
/*
 * 
 * Enter a string as input: Sengoku Bushin Raijinn Ghost
Enter char you want to search as input: n
Frequency of n' = 4
 * 
 */

//2nd Attempt, Corrected 1st attempt, added explanation for future revision
import java.util.*;

public class freqTable {
    private HashMap<Character,Integer> Freq = new HashMap<>();

    public freqTable(String s){
        // Ini. freq. of all LoCase letters to 0
        for(int i = 0; i < 26; i++){
            Freq.put((char)(i + 'a'), 0);
        }
        // Count freq. of chars in s
        for(int i = 0; i < s.length(); i++){
            // store current char of s in ch
            char ch = s.charAt(i);
            //check if ch is present in HM
            if(Freq.containsKey(ch)){
                //if present, store its (int)
                //freq. of occurence in count var.
                int count = Freq.get(ch);
                //increase freq. of ch by 1
                //put it back in HM
                //this updated freq will map to same key==ch here
                Freq.put(ch, count + 1);
            }
        }
    }

    public void printHM(){
        // to print HM
        // make a var., entry, that iterates through all val of all elements in HM(=entrySet)
        for (Map.Entry<Character, Integer> entry : Freq.entrySet()) {
            System.out.println("Key: " + entry.getKey() + ", Value: " + entry.getValue());
        }

        //to iterate via keyset
        // for (char key : Freq.keySet()) {
        //     System.out.println("Character: " + key + ", Frequency: " + Freq.get(key));
        // }

        // to print the HM using forEach() -- need to override forEach Method 
        //-- commonly used with lambdas/Anonymous Inner Class
        // Freq.forEach((key, value) -> System.out.println("Character: " + key + ", Frequency: " + value));
    }

    public int getFreq(char ch) {
        //if (Freq.containsKey(ch)) {
            return Freq.get(ch);
        //} 
        // Not required here as initialized all 26 alphabets to 0
        // Required in most cases
        // else {
        //     return 0; // If the character is not found, return 0
        // }
    }

    public static void main(String args[]){
        Scanner s = new Scanner(System.in);
        System.out.print("Enter a string as input: ");
        String input = s.nextLine();
        freqTable CD = new freqTable(input);
        System.out.print("Enter char you want to search as input: ");
        /* Pay attention, how to take char as input */
        char srch=s.next().charAt(0);;
        int srchFreq= CD.getFreq(srch);
        System.out.println("Frequency of " + srch + "' = " + srchFreq);

        //System.out.println("Printing out All Freq. of All chars.");
        //CD.printHM();
        s.close();
    }
}


//1st attempt from my memory, some minor mistakes
// import java.util.*;

// public class freqTable {
//     public HashMap<Character,Integer> Freq=new HashMap<>();
//     freqTable(String s){
//         //HashMap<Character,Integer> Freq=new HashMap<>();
//         int i;
//         for(i=0;i<26;i++){
//             Freq.put((char)(i+'a'),0);
//         }
//         for(i=0;i<s.length();i++){
//             if(Freq.containsKey(s.charAt(i))){
//                 int V = Freq.getValue(s.charAt(i));
//                 Freq.put(s.charAt(i),V+1);
//             }
//         }

//     }

//     public void printHM(HashMap<Character,Integer> H){
//         // Print the HashMap
//         for (Map.Entry<Character, Integer> entry : H.entrySet()) {
//             System.out.println("Key: " + entry.getKey() + ", Value: " + entry.getValue());
//     }}

    
// public static void main(String args[]){
//     Scanner s=new Scanner(System.in);
//     System.out.print("Enter a no. as input:");
//     int n=s.nextInt();
//     freqTable CD= new freqTable("ssmray");
//     CD.printHM(Freq);
    
//     s.close();
// }}

//q2
//Print no. of occurences of elems of input array
// ex-
// Enter length of array as input:5
// Enter Array elements:
// A(0): 44
// A(1): 44
// A(2): 77
// A(3): 77
// A(4): 7
// Element: 7, No. of Occurences: 1
// Element: 44, No. of Occurences: 2
// Element: 77, No. of Occurences: 2

import java.util.*;

public class ArrayOccurr {
    ArrayOccurr(int [] A){//EF=ELement Freq.
        HashMap<Integer,Integer> EF= new HashMap<>();
        int i;
        int L=A.length;
        for(i=0;i<L;i++){
            if(EF.containsKey(A[i])){
                //if elem already prsnt overwrt its freq by incremented freq
                EF.put(A[i],EF.get(A[i])+1);
            }else{//if elem not prsnt, add with freq=1
                EF.put(A[i],1);
            }
        }
        printHM(EF);

    }

    public void printHM(HashMap<Integer, Integer> EF){
        // to print HM, this time using key set
        // make a var., entry, that iterates through all keys(elem. in array) in HM(=entrySet)
        
        for (int key : EF.keySet()) {
            System.out.println("Element: " + key + ", No. of Occurences: " + EF.get(key));
        }
    }

    public static void main(String args[]){
    Scanner s=new Scanner(System.in);
    System.out.print("Enter length of array as input:");
    int l=s.nextInt(); int A[]=new int[l];
    System.out.println("Enter Array elements:");
    for(int i=0;i<l;i++){
        System.out.print("A("+i+"): ");
        A[i]=s.nextInt();
    }
    ArrayOccurr CD= new ArrayOccurr(A);
    
    s.close();
}
}

// q3. Find the highest/lowest frequency element
// Problem Statement: Given an array of size N. 
// Find the highest and lowest frequency element.
// Enter length of array as input:7
// Enter Array elements:
// A(0): 11
// A(1): 11
// A(2): 11
// A(3): 11
// A(4): 55
// A(5): 55
// A(6): 66
// Highest Freq. Element: 11 with Frequency: 4
// Lowest Freq. Element: 66 with Frequency: 1

import java.util.*;

public class HiLoArrOccurr {
    HiLoArrOccurr(int [] A){//EF=ELement Freq.
        HashMap<Integer,Integer> EF= new HashMap<>();
        int i;
        int L=A.length;
        for(i=0;i<L;i++){
            if(EF.containsKey(A[i])){
                //if elem already prsnt overwrt its freq by incremented freq
                EF.put(A[i],EF.get(A[i])+1);
            }else{//if elem not prsnt, add with freq=1
                EF.put(A[i],1);
            }
        }
        printHiLoHM(EF);

    }
    //2nd Attempt, corrected implementation, added explanation for revision
    public void printHiLoHM(HashMap<Integer, Integer> EF) {
        int Hi = 0;
        int Lo = EF.size();
        // Ini. keys for hi and lo freq.
        int hiKey = 0; 
        int loKey = 0;
        for (int key : EF.keySet()) {
            int F = EF.get(key);
            if (F > Hi) {
                Hi = F;
                // Update key for hi freq
                hiKey = key; 
            }
            if (F < Lo) {
                Lo = F;
                // Update key for lo freq
                loKey = key; 
            }
        }
    
        System.out.println("Highest Freq. Element: " + hiKey + " with Frequency: " + Hi);
        System.out.println("Lowest Freq. Element: " + loKey + " with Frequency: " + Lo);
    }
    

    //1st Attempt, logic correct, wrong implementation as there is no way to get Key from Element
    // public void printHiLoHM(HashMap<Integer, Integer> EF){
        
    //     int Hi=0;
    //     int Lo=EF.size();
    //     for (int key : EF.keySet()) {
    //         int F=EF.get(key);
    //         if(F>Hi){
    //             Hi=F;
    //         }
    //         if(F<Lo){
    //             Lo=F;
    //         }
    //     }

    //     System.out.println("Higest Freq. Elem."+ EF.getKey(Hi)+" w/ Freq.= "+Hi);
    //     System.out.println("Lowest Freq. Elem"+ EF.getKey(Lo)+" w/ Freq. ="+Lo);
    // }

    public static void main(String args[]){
    Scanner s=new Scanner(System.in);
    System.out.print("Enter length of array as input:");
    int l=s.nextInt(); int A[]=new int[l];
    System.out.println("Enter Array elements:");
    for(int i=0;i<l;i++){
        System.out.print("A("+i+"): ");
        A[i]=s.nextInt();
    }
    HiLoArrOccurr CD= new HiLoArrOccurr(A);
    
    s.close();
}
}